###############################
## Base Configuration
###############################

# The base url of the deployed SAGE instance (omit trailing slash)
base.url = http://localhost:8080

# Specify the number of hours that senator data is cached before being refreshed.
senator.cache.refresh.hours = 12

#Data related to SAGE is kept in this folder.
mass.geocache.error.log = /data/tomcat/logs/mass-geocache

###############################
## Authentication Configuration
###############################

# Remote IPs matching (regex) user.ip.filter are not required to specify an API key.
user.ip.filter = (127.0.0.1)

# Such requests default to using the user.default API key.
user.default.key =

# Allow api calls that match the regex to use the default user if no key is supplied.
# The format of an api request is /api/v2/service/method. The regex should contain an
# an alternation of allowed services e.g (map|street)
public.api.filter = (map)

# Default API key for accessing public apis
user.public.key =

#Default admin username and pass. Reuqired for ensuring database is configured correctly with shiro
default.admin.username = Can be found in the database

default.admin.password = Can be found in the database

#################################
## Database Logging Configuration
#################################

# Log the ip, request type, and time for each api call
api.logging.enabled = true

# Log full details of the request and result for single api requests
detailed.logging.enabled = true

# Log full details of each entry processed during batch api and job requests
batch.detailed.logging.enabled = false

###############################
## API Services Configuration
###############################

# USPS (free AIS web service)
usps.ais.url = http://production.shippingapis.com/ShippingAPI.dll
usps.ais.key = API key obtained from USPS

# USPS AMS Service
usps.ams.api.url = http://localhost:8080/USPS-AMS/api/
usps.ams.ui.url = http://localhost:8080/USPS-AMS/

# NYSenate.gov (full url, no trailing slash)
nysenate.domain = http://www.nysenate.gov

# Google Geocoder (free service, daily rate limit)
google.geocoder.url = https://maps.googleapis.com/maps/api/geocode/json
google.geocoder.key = API Key obtained from Google

google.maps.url = https://maps.google.com/maps/api/js?v=3&libraries=places
google.maps.key = API Key obtained from Google (this key is public facing)

nys.geocoder.url = https://gisservices.its.ny.gov/arcgis/rest/services/Locators/Street_and_Address_Composite/GeocodeServer
nys.geocode.ext = /findAddressCandidates
nys.revgeocode.ext = /reverseGeocode

# RubyGeocoder (free service)
#ruby.geocoder.url = http://geocoder.nysenate.gov/GeoRubyAdapter/api/geocode
#ruby.geocoder.bulk.url = http://geocoder.nysenate.gov/GeoRubyAdapter/api/bulk

# Yahoo (free service that uses YQL)
#yahoo.url = http://query.yahooapis.com/v1/yql
#yahoo.consumer.key = API key obtained from Yahoo
#yahoo.consumer.secret = API secret obtained from Yahoo
#yahoo.batch.size = 100

# Yahoo BOSS (commercial service)
#yahoo.boss.url = http://yboss.yahooapis.com/geo/placefinder
#yahoo.boss.consumer_key = API key obtained from Yahoo
#yahoo.boss.consumer_secret = API secret obtained from Yahoo

# Microsoft Bing
#bing.key = API key obtained from Microsoft

# MapQuest (free and commercial services; free service is rate-limited)
#mapquest.geo.url = http://www.mapquestapi.com/geocoding/v1/batch
#mapquest.rev.url = http://www.mapquestapi.com/geocoding/v1/reverse
#mapquest.key = <API key obtained from MapQuest>

# OpenStreetMap (free service from MapQuest using OSM data)
#osm.url = http://open.mapquestapi.com/nominatim/v1/search

###############################
## USPS Settings
###############################
# Note: All settings in this group require an application restart to take effect.

# Set the default usps implementation. The available options are:
# usps      -- Utilizes the Native AMS Web Service
# uspsais   -- Utilizes the Free AIS Web Service
usps.default = usps

###############################
## Geocoder Settings
###############################

# Comma separated string indicating the geocoders that should be enabled.
# Available geocoders: google, tiger, mapquest, osm
geocoder.active = nysgeo, google, tiger

# Comma separated string indicating the order in which geocoders should be used.
# Only the geocoders listed in this ranking will be used in the default fallback chain.
# All other active geocoders have to be specifically requested by the user through the api.
geocoder.rank = nysgeo, google, tiger

# Comma separated string indicating which geocoders are cacheable.
geocoder.cacheable = nysgeo, google

# Indicate the number of failed attempts a geocoder can make before being temporarily blocked.
geocoder.failure.threshold = 20

# The time (in seconds) that must elapse in order for a blocked geocoder to be unblocked.
geocoder.retry.interval = 300

# TigerGeocoder (in database) query time-out in ms
tiger.geocoder.timeout = 30000

################################
## Multi-Threading
################################
validate.threads = 3
distassign.threads = 3
geocode.threads = 3
revgeocode.threads = 3

################################
## GeoServer Integration
################################
geoserver.url = http://geoserver:8080/wfs
geoserver.workspace = nysenate

##################################
## GeoApi Database Configuration
##################################
db.driver = org.postgresql.Driver
db.type = postgresql
db.host = localhost
db.name = geoapi
db.user = username
db.pass = password

env.districts.schema = districts
env.job.schema = job
env.log.schema = log
env.public.schema = public
################################
## Tiger Geocoder Configuration
################################
tiger.db.driver = org.postgresql.Driver
tiger.db.type = postgresql
tiger.db.host = localhost
tiger.db.name = geocoder
tiger.db.user = username
tiger.db.pass = password

env.cache.schema = cache
env.tiger.schema = tiger
env.tiger.data.schema = tiger_data
env.geocoder.public.schema = public
#################################
## Mailing Configuration
#################################
smtp.active = true
smtp.host = senmail.senate.state.ny.us
smtp.port = 25
smtp.auth = false
smtp.user = 
smtp.pass = 
smtp.debug = false
smtp.admin = zalewski@nysenate.gov
smtp.tls.enable = true
smtp.ssl.enable = false
# The mailer doesn't have access to the server context, so specify manually
smtp.context = http://helo.nysenate.gov:8080

#################################
## Batch Job Configuration
#################################
# Set to false to disable all job related emails
job.send.email = true

# Local directory to save uploaded batch job files
job.upload.dir = /data/geoapi_data/uploads/

# Local directory to save completed batch jobs
job.download.dir = /data/geoapi_data/downloads/

job.batch.size = 40
job.threads.validate = 1
job.threads.geocode = 2
job.threads.distassign = 2

#####################################
## District Assignment Configuration
#####################################

# Specify the maximum distance (in meters) between a geocode and a district boundary
# that can result in a `near border` condition.
border.proximity = 200

# Specify the maximum distance (in meters) between a geocode and a neighbor district in order
# for that neighbor district to be considered `nearby`.
neighbor.proximity = 500

# District strategy sets up the default logic for district assignment.
# Note: The strategy may be overwritten by application logic depending on input.
# The names of the available options are:
# neighborMatch   : Perform shape and street lookup, obtains neighbor districts if applicable.
# streetFallback  : Perform shape and street lookup, using street file in case of mismatch.
# shapeFallback   : Perform street lookup and only fall back to shape files when street lookup failed.
# streetOnly      : Perform street lookup only.
# shapeOnly       : Perform shape lookup only.

district.strategy.single = neighborMatch
district.strategy.bluebird = streetFallback
district.strategy.batch = shapeFallback

#####################################
## Geocode Cache Configuration
#####################################

# Enable/Disable use of geocode cache (true/false)
geocache.enabled = true

# The cache buffer size indicates the number of geocode results that
# are queued before being written to the cache database.
geocache.buffer.size = 100

#####################################
## Cron Configuration
#####################################
# Cron expressions that dictate scheduling for scheduled services
# Format "{second} {minute} {hour} {day of month} {month} {day of week}"

# When the job processor should run / check for files
job.process.cron = 0 * * * * *

#####################################
## Streetfile Script Config
#####################################
# Working directory for processing the NYS Address Point file from ITS into a streetfile tsv.
streetfile.nysaddresspoint.dir = /data/geoapi_data/street_files/NYS_SAM_address_points/

#####################################
## Post Office Data
#####################################
post.office.data.dir = /data/geoapi_data/post_offices
